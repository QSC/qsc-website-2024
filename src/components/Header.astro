---
import "../styles/main.scss"
import logoImage from "../images/qsc_logo_cropped_100x100.png";
import {Image} from "astro:assets";
---
<header class="header">
    <div class="title" aria-hidden="true">
        <a href="../home">
            <Image src={logoImage} alt="Queen's Space Conference Logo" style="height: auto; width: 3em; object-fit: cover";/>
            <p>Queen's Space Conference</p>
        </a>
    </div>
    <nav id="navbar" role="navigation" aria-label="Website Navigation">
        <ul>
            <li><a href="../home">Home</a></li>
            {/*<li><a href="../schedule">Schedule</a></li>*/}
            <li><a href="../speakers">Speakers</a></li>
            <li><a href="../about-us">About Us</a></li>
            {/*<li><a href="../tickets">Tickets</a></li>*/}

        </ul>
        <button class="hamburger" aria-controls="navbar" aria-expanded="false">
            <div></div>
            <div></div>
            <div></div>
        </button>
    </nav>
</header>
<script>
    // Initialize navbarHeight variable
    let navbarHeight = 0;

    function init() {
        setHeroHeight()
        setNavbarLogic()
    }

    // Define a function to set the CSS variable for hero section
    function setHeroHeight() {
        const navbar = document.querySelector('header');
        if (navbar) {
            navbarHeight = navbar.offsetHeight;
            const hero = document.querySelector('.hero');
            document.querySelector(':root').style.setProperty('--navbar-height', `${navbarHeight}px`)
        }
    }

    function setNavbarLogic() {
        const hamburger = document.querySelector("nav button")
        if(hamburger) {
            hamburger.addEventListener('click', () => {
                const hamburger = document.querySelector("nav button")
                const nav = document.querySelector("nav")
                const ul = nav.querySelector("ul")
                hamburger.ariaExpanded = hamburger.ariaExpanded === "false" ? "true" : "false"
                const expanded = hamburger.ariaExpanded
                if (expanded === "true") {
                    nav.classList.add(expanded)
                } else {
                    console.log("rem")
                    nav.classList.remove(expanded)
                }
            })
        }
    }
    window.addEventListener('DOMContentLoaded', init);
</script>
<style lang="scss">
  @import "../styles/variables";

  .header {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    padding-inline: 0.5em;
    align-items: center;
    width: 100%;
    background-color: $dark-purple;
    border-bottom: 2px solid $light-purple;
    position: sticky;
    top:0;
    z-index: 3;

    nav {
      ul {
        display: flex;
        flex-direction: row;
        list-style: none;
      }

      li {
        overflow: hidden;
      }

      a {
        width:100%;
        height:100%;
        color: $white;
        text-align: center;
        padding:1em;
        display: inline-block;
        text-decoration: none;
      }

      a:hover {
        background-color: $light-purple;
      }
    }

    .hamburger {
      display: none;
    }

    .title {
      a {
        color:inherit;
        text-decoration: none;
        display: flex;
        flex-direction: row;
        align-items: center;
        gap:.8em;
      }

      a:hover {
        color:inherit;
      }
    }

    @media screen and (max-width: $screen-mobile-large) {
      nav {
        ul {
          flex-direction: column;
          display:none;
        }

        li {
          display:flex;
        }

        a {
          padding: 1em;
        }
      }

      .hamburger {
        display: block;
      }

      nav:has(.hamburger[aria-expanded="true"]) {
        position:absolute;
        top:0;
        left:0;
        width:100%;
        display:flex;
        background-color: $dark-purple;

        ul {
          display: flex;
          width:100%;
        }

        .hamburger {
          position:absolute;
          top:1em;
          right:1em;
          display: flex;
          align-items: center;
          justify-content: center;

          >div {
            position:absolute;
          }
          >div:nth-child(1) {
            transform: rotate(45deg);
          }
          >div:nth-child(2) {
            transform: rotate(-45deg);
          }
          >div:nth-child(3) {
            display:none;
          }
        }
      }
    }
  }

  .hamburger {
    all: unset;
    margin: 1em;
    cursor: pointer;

    >div {
      width: 35px;
      height: 5px;
      background-color: white;
      margin: 6px 0;
    }
  }

  .hamburger:focus{
    outline: $light-purple solid 3px;
  }

  .expanded {
    display:block;
  }
</style>