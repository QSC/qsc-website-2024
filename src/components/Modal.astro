---
const { openButton } = Astro.props;
---

<div>
    <slot name="button"/>
    <dialog role="dialog" class="modal">
        <div>
            <div>
                <button class="closeButton">X</button>
            </div>
            <slot name="content"/>
        </div>
    </dialog>
</div>



<script>
    const modalDivs = document.querySelectorAll("div:has(>dialog)")

    // closing by clicking outside
    modalDivs.forEach(modalDiv => {
        const dialog = modalDiv.querySelector("dialog")
        const wrapper = dialog.querySelector(":scope > div")
        dialog.addEventListener('click', e => {
            const target = e.target as HTMLElement
            if(target && !wrapper.contains(target)) {
                dialog.close()
            }
        })

        const button = modalDiv.querySelector(":scope > button")
        button.addEventListener("click", e => {
            dialog.showModal()
        })

        const close = dialog.querySelector("button")
        close.addEventListener("click", e => {
            dialog.close()
        })
    })
</script>
<style lang="scss">
  @import "../styles/fonts";
  @import "../styles/variables";

  .modal::backdrop {
    background-color: rgba($light-purple, 60%);
    opacity: 60%;
  }

  .modal {
    background-color: $dark-purple;
    border: $white 5px solid;
    color: $white;
    border-radius: 5px;
    padding:.5em;
    min-width: 100px;

    >div>div:nth-child(1) {
      width:100%;
      display:flex;
      justify-content: right;
    }

    .closeButton {
      //all: unset;
      cursor: pointer;
      background-color: purple;
      position:sticky;
      top:0;
      right:0;
      :focus-visible{
        outline: red solid 3px;
      }
    }
  }
</style>